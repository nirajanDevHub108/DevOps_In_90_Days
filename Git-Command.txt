GIT commands

configure user name 
1.git config user.name name

configure user email
2.git config user.email "example@com"

3. initialize git repository
 .->git init

4.check the staus of repo
.-> git status

5.clone repository
.-> git clone "url"

6.create new file 
.-> touch filename.txt

7.add into the file or print into the screen or add to seprate file

->echo "i am akhil" >> text1.txt
cat filename

8.Add the files into  stagging area

.-> git add file.name

or add whole/all directory or repo
\.->git add .

9.Restore the previous version of file

.-> git restore filename.txt

10.commit into the repository 

.-> git commit -m "mesage for your commit"

11.how we can remove the staged file and add other modified file into staging area

.-> git restore --staged fileName.txt

use case 
1. supoose we create 2 files one.txt for actual work and two.txt for ideas but we mistakenly add both file in the staging area how can we remove that our two.txt file?

how we have added -> git add .



but we can remobe one file by using this command 

-> git rm --cached two.txt (fileName) cached -f (force)

12. you can also add that file so in ignore section so that it will not be tracked down by git 

->echo "notes.txt" > .gitignore

13.you can check all the commit by having this command 

-> git log

14.you can show this in one line by uisng 

->git log --oneline

15.we can find the file added by uisng this log command 
->git log --name-only

16.you can check out git help log for more refrence


------------------------------------------------------------------  
Git BRANCHES
------------------------------------------------------------------



Main/Master is the main production branch 

1.we can move/switch  from one branch to other branch  from main by using 

->git checkout SIT

create a new branch and checkout to it 

->git checkout -b max


2.we can check branch using 

->git branch

3.create a new branch

-> git branch Feature_branch_name

4.delete a branch 

->git branch -d max

5.List all branches

->git branch

6.to see previous commit history
-> git log --graph --decorate

________________________________________________________________Git Merging
________________________________________________________________

1.Git checkout to your master branch and run the command to merge it

->git checkout master
->git merge feature/signup

2. two type of coomit merging
fast-forward
no fast forward

git log --graph --decorate

________________________________________________________________ Initialize Remote Repositories
________________________________________________________________
on github,gitLab,Bitbucket

connection stringlocal to remote Repositories

1.git reomte add origin (url) connection string

2.to list all remote Repositories

->  git remote -v

origin  url (fetch)
origin ure (push)

---Pushing to remote repositories--

git push origin(alias) master (branch name)


git remote add origin http://git.example.com/sarah/story-blog.git


Which command can be used to push data to our remote repo?

remote repo alias : origin

remote branch : master

->  git push <remote repo alias> <remote branch>
git push origin master
username pass 

 

________________________________________________________________ Git cloning
________________________________________________________________
1.clone a git repo by ssh link
->git clone <URL>

2.cd 

________________________________________________________________ Git Pull request
________________________________________________________________
1. to push to diffrent branch 

->git push origin branch/name

________________________________________________________________ Git Fetching and Pulling from remote repo
________________________________________________________________

1.in order to upade local repository we can fetch the main branch

->git fetch origin master

2. inorder to merge origin/master branch with local master branch we can use this cmmnd

->git merge origin/master

2.we can do that by uisng pull command we can fetch and merge master branch to our local repro.

->git pull origin master

________________________________________________________________ Merge Conflict
________________________________________________________________

1.git add filename
2.git merge
resolve the conflict in the editor and keep the change you want to keep and merge back to master branch.

________________________________________________________________ Git Fork
________________________________________________________________

fork the main project and contribute to the open source project


